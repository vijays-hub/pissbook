// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String    @id
  username     String    @unique
  email        String    @unique
  passwordHash String?
  googleId     String?
  avatarUrl    String?
  bio          String?
  sessions     Session[]

  createdAt DateTime @default(now())

  @@map("users") // we don't want the table to be called "User" in the database, instead we want it to be called "users"
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  // This is the relation to the User model. It is a one-to-many relation, as one user can have many sessions. Cascade means that if a user is deleted, all of their sessions will be deleted as well.
  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}
